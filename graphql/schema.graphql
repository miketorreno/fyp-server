"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

scalar Upload
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")

type Query {
    # USERS

    # businesses: [Business!]! @paginate(defaultCount: 10)
    businesses: [Business!]! @all
    # business(id: ID @eq): Business @find
    business(__id: String @eq): Business @find
    # businessSearch(search: String @search): [Business!]! @paginate(defaultCount: 10)
    businessSearch(search: String @search): [Business!]! @all
    photos: [Photo!]! @all

    # categories: [Category!]! @paginate(defaultCount: 10)
    categories: [Category!]! @all
    category(id: ID @eq): Category @find

    # reviews: [Review!]! @paginate(defaultCount: 10)
    reviews: [Review!]! @all
    review(id: ID @eq): Review @find

    votes: [Vote!]! @all
    vote(id: ID @eq): Vote @find

    users: [User!]! @paginate(defaultCount: 10)
    # user(id: ID @eq): User @find
    user(__id: String @eq): User @find

    # search(address: String! @where(operator: "like")): [Business!]! @all

    # BUSINESS OWNERS
    search(search: String @search): [Business!]! @all
    my_businesses(__id: String @eq): User @find
    businessVerifications: [BusinessVerification!]! @all
    verifyBusiness(
        code: String! @where(operator: "=")
    ): [BusinessVerification!]! @all
}

type Mutation {
    # BUSINESSES
    createBusiness(
        __id: String
        category_id: Int!
        business_name: String!
        address: String!
        city: String!
        state: String!
        postal_code: String
        latitude: Float!
        longitude: Float!
        location: String!
        geohash: String
        telephone_number: String!
        email: String
        website: String
        image_url: String
        header_image: String
    ): Business! @create
    # createBusiness(input: CreateBusinessInput! @spread): Business! @create
    updateBusiness(
        id: ID!
        category_id: Int
        business_name: String!
        address: String!
        city: String!
        state: String
        postal_code: String
        latitude: Float!
        longitude: Float!
        location: String
        geohash: String
        telephone_number: String
        email: String
        website: String
        image_url: String
        header_image: String
    ): Business @update
    updateBusinessStatus(id: ID!, user_id: Int!, claimed: Int!): Business
        @update
    deleteBusiness(id: ID!): Business @delete

    # BUSINESS VERIFICATIONS
    createBusinessVerification(
        business_id: Int!
        code: String!
        issued_by: String!
    ): BusinessVerification! @create
    deleteBusinessVerification(id: ID!): BusinessVerification @delete

    # CATEGORIES
    createCategory(parent_id: Int, __id: String, category: String!): Category!
        @create
    updateCategory(
        id: ID!
        parent_id: Int
        __id: String
        category: String
    ): Category @update
    deleteCategory(id: ID!): Category @delete

    # REVIEWS
    createReview(
        __id: String
        business_id: Int!
        user_id: Int!
        rating: Int!
        review: String!
    ): Review! @create
    updateReview(
        id: ID!
        business_id: String
        user_id: String
        rating: Int
        review: String
        edited: Int
    ): Review @update
    deleteReview(id: ID!): Review @delete

    # REVIEWS VOTES
    # checkVote(review_id: Int!, user_id: Int!): Vote! @create
    createVote(review_id: Int!, user_id: Int!, val: Int!): Vote! @create
    # upsertVote(review_id: Int!, user_id: Int!, val: Int!): Vote! @upsert
    deleteVote(id: ID!): Vote @delete

    # USERS
    createUser(
        __id: String
        name: String
        avatar: String
        email: String
        password: String
    ): User! @create
    updateUser(
        id: ID!
        name: String
        phone: String
        email: String
        bio: String
    ): User @update
    deleteUser(id: ID!): User @delete

    # UPLOADS
    upload(photo: Upload!): String
}

type Business {
    id: ID!
    __id: String
    business_name: String!
    address: String!
    city: String!
    state: String!
    postal_code: String
    latitude: Float!
    longitude: Float!
    location: String!
    geohash: String
    telephone_number: String
    email: String
    website: String
    image_url: String
    header_image: String
    is_open: Int!
    verified: Int!
    claimed: Int!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
    user: User @belongsTo
    category: Category! @belongsTo
    reviews: [Review] @hasMany
    photos: [Photo] @hasMany
    reviewCount: Int! @count(relation: "reviews")
    ratingAvg: Float
        @aggregate(relation: "reviews", column: "rating", function: AVG)
}

type BusinessVerification {
    id: ID!
    business_id: Int!
    code: String!
    issued_by: String!
    business: Business! @belongsTo
}

type Category {
    id: ID!
    parent_id: Int
    __id: String!
    category: String!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
    businesses: [Business!]! @hasMany
}

type Photo {
    id: ID!
    __id: String!
    business_id: Int!
    user_id: Int!
    url: String
    caption: String
    business: Business! @belongsTo
    user: User @belongsTo
}

type Review {
    id: ID!
    __id: String!
    business_id: Int!
    user_id: Int!
    rating: Int!
    review: String!
    edited: Int!
    created_at: Date
    updated_at: DateTime
    deleted_at: DateTime
    business: Business! @belongsTo
    user: User! @belongsTo
    voteCount: Int! @count(relation: "votes")
}

type User {
    id: ID!
    __id: String!
    name: String!
    username: String
    avatar: String
    phone: String
    email: String!
    verified: Int
    bio: String
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
    reviews: [Review] @hasMany
    photos: [Photo] @hasMany
    businesses: [Business] @hasMany
}

type Vote {
    id: ID!
    review_id: Int!
    user_id: Int!
    val: Int!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
    review: Review! @belongsTo
    user: User! @belongsTo
}

input CreateBusinessInput {
    __id: String
    business_name: String!
    address: String!
    city: String!
    state: String!
    postal_code: String
    latitude: Float!
    longitude: Float!
    location: String!
    geohash: String
    telephone_number: String
    email: String
    website: String
    image_url: String
    header_image: String
}
